Beet Seed  — відпрацюй навички на базовому рівні.
Склади порівняльну таблицю найбільш поширених методологій:
Назва моделлі
	Сильні сторони
	Слабкі сторони
	Для якої галузі є доцільною
	Модель водоспаду
	-Підходить для невеликих проектів, де вимоги чітко визначені
-Будь-які зміни в програмне забезпечення вносяться в процесі розробки
-Ретельна документація ведеться на кожному етапі циклу розробки програмного забезпечення




	-Помилка може бути виправлена тільки на етапі
-Не бажано для складних проектів, де вимоги часто змінюються
-Період тестування настає досить пізно в процесі розробки
-Документація займає багато часу розробників і тестувальників
-Невеликі зміни або помилки, що виникають у готовому програмному забезпеченні, можуть спричинити багато проблем
	Вимоги не змінюються часто
Додаток не є складним та великим
Проект короткий
Вимоги зрозумілі
Середовище стабільне
Технології та інструменти, що використовуються, не є динамічними та стабільними
Ресурси доступні та навчені


	V-модель
	-легко в використанні
-тестування відбуваєтся до самого коду тому це зберігає багато часу
-добре підходить для малих проектів де легше зрозуміти реквайементс
-для кожної фази життєвого циклу розробки існує відповідна фаза тестування
-швидше та дешевше виправити баги
-розробка по деталям наданим від клієнта
	-менш гнучкий
-Програмне забезпечення розробляється на етапі впровадження, тому ранні прототипи програмного забезпечення не створюються.
-Якщо в середині розробки відбуваються якісь зміни, то тестові документи разом з документами вимог повинні бути оновлені.
	-на малих та середніх проектах де легко зрозуміти вимоги та де вони чітко зазначені та зафіксовані
-коли є наявність достатніх технічних ресурсів та необхідного технічного досвіду
	Agile модель
	-Задоволення потреб клієнтів шляхом швидкого та безперервного постачання корисного програмного забезпечення.
-Наголос робиться на людях та взаємодії, а не на процесах та інструментах. 
-Регулярна адаптація до мінливих обставин.
-Навіть пізні зміни у вимогах вітаються


	-У випадку деяких програмних продуктів, особливо великих, важко оцінити зусилля, необхідні на початку життєвого циклу розробки програмного забезпечення.
-Недостатньо уваги приділяється необхідному проектуванню та документації.
-Проект може легко зійти зі шляху, якщо представник замовника не розуміє, якого кінцевого результату він хоче.
-Лише старші програмісти здатні приймати рішення, необхідні в процесі розробки. Тому в ньому немає місця для програмістів-початківців, якщо тільки вони не поєднуються з досвідченими ресурсами.
	Коли потрібно впроваджувати нові зміни. Свобода, яку дає гнучкий підхід до змін, дуже важлива. Нові зміни можна впроваджувати з дуже невеликими витратами через частоту нових інкрементів, які виробляються.
Щоб впровадити нову функцію, розробникам потрібно втратити лише кілька днів або навіть годин роботи, щоб відкотити назад і впровадити її.
	Спіральна модель
	-Великий обсяг аналізу ризиків, а отже, покращується уникнення ризиків.
-Добре підходить для великих і критично важливих проектів.
-Сильний контроль затвердження та документації.
-Додаткова функціональність може бути додана пізніше.
-Програмне забезпечення створюється на ранній стадії життєвого циклу програмного забезпечення.


	-Може бути дорогою у використанні.
-Аналіз ризиків вимагає вузькоспеціалізованих знань.
-Успіх проекту сильно залежить від етапу аналізу ризиків.
-Не підходить для невеликих проектів.
	-Коли важлива оцінка витрат і ризиків
-Для проектів із середнім та високим рівнем ризику
-Довгострокові зобов'язання за проектом є нерозумними через потенційні зміни економічних пріоритетів
-Користувачі не впевнені у своїх потребах
-Вимоги складні
-Нова лінійка продуктів
-Очікуються значні зміни
	Ітераційна модель
	В ітеративній моделі ми можемо створити лише високорівневий дизайн додатку до того, як почнемо створювати продукт і визначимо дизайнерське рішення для всього продукту. 
В ітеративній моделі ми створюємо та вдосконалюємо продукт крок за кроком. Таким чином, ми можемо відстежувати дефекти на ранніх стадіях. 
В ітеративній моделі менше часу витрачається на документування і більше часу відводиться на проектування.
	Кожна фаза ітерації є жорсткою і не перетинається
Можуть виникнути дорогі проблеми з архітектурою або дизайном системи, оскільки не всі вимоги зібрані заздалегідь для всього життєвого циклу.
	Вимоги до всієї системи чітко визначені та зрозумілі.
Коли проект великий.
Основні вимоги повинні бути визначені; однак, деякі деталі можуть змінюватися з часом.
	інкрементна модель
	Створює робоче програмне забезпечення швидко і на ранній стадії життєвого циклу.
Ця модель є більш гнучкою - менше витрат на зміну обсягу та вимог.
Її легше тестувати та налагоджувати протягом меншої ітерації.
У цій моделі клієнт може реагувати на кожну збірку.


	Потребує хорошого планування та дизайну.
Потребує чіткого і повного визначення всієї системи, перш ніж її можна буде розбити на частини і будувати поетапно.
Загальна вартість вища, ніж у водоспаду.


	Цю модель можна використовувати, коли вимоги до всієї системи чітко визначені і зрозумілі.
Основні вимоги повинні бути визначені; однак, деякі деталі можуть змінюватися з часом.
Існує потреба вивести продукт на ринок якнайшвидше.
	

Beet Sprout — детальніше заглибся в практику. 
1. Виконай завдання попереднього рівня.
2. Напиши розгорнуті відповіді (0,5 - 1 сторінки тексту) на такі два питання:
* На твою думку, чому з’явився Agile-маніфест?
* Які проблеми він мав вирішити і чи це вдалося?
На мою думку Angile-маніфест з'явився для того щоб допомогти працівникам легше зрозуміти послідовність роботи, взагалі які кроки є для цієї роботи і щоб роботу було легше виконати бо всі завдання та критерії видні і також щоб були легші альтернативи стандартним важким методологіям. Також це могло бути для того щоб програмісти розуміли весь обсяг роботи тим самим розуміли чи впораються вони за цей час самі або ім потрібна допомога. 
На мою думку цей маніфест вирішив проблему з швидкістю та якістю роботи і саме це він і намагався зробити. Також він хотів вирішити таку проблему як цитую “Працюючий продукт важливіший за вичерпну документацію”  тобьо для цього маніфести якість продукту важливіша ніж документація, співпраці з замовником для них важливіша ніж обговореня контракту, готовність д змін для них важливіша ніж дотримання плану і люди та співпраця важливіші ніж процеси та інструменти. І тому я вважаю що в них вийшло вирішит проблеми які існували до того тим що хоч і документація і тд важлива але якість проекту, люди та гнучкість важливіша.


Mighty Beet — різнобічно опануй тематику уроку.
1. Виконай завдання двох попередніх рівнів.
2. Ти – засновник/ця стартапу і плануєш випустити на ринок мобільний застосунок для обміну світлинами котиків.
Яку методологію ти обереш для процесу розробки і чому? Відповідь текстово обґрунтуй. 
Я б використала для цього стартапу або модель водоспаду бо це не є дуже великий проект і також стартапи не мають багато фінансів щоб використати інші більш дорогі але зручні методології але мінус водоспаду що тестування може бути дуже дорогим і потім щоб виправити помилки це теж буде коштувати багато, але я б ще використала V модель тому що вона зручніша по тестуванню, усі помилки можна виправити на всіх кроках розробки і ця модель також є для невеликих проектів як цей і також ця модель набагто дешевша ніж водоспад тому що прмилки легко виправляються бо тестування відбувається після кожного кроку і я вважаю що саме ця методологія все ж таки більше підходить тому що в нас також є чіткі критерії з приводу застосунка і також 
Після уроку я зрозуміла що як і водоспад та В модель не підходять до цього стартапу тому що це не дуже сучасна метедологія тому я б обрала більш гнучку методологія аде наскільки я зрозуміля гнучки методології але проблема гнучких методологій в тому що вони можуть білш дорогі але в кінці все одно гнучка обійдеться дешевше ніж водоспад і так далі тому що плюс гнучкою що тут  не треба чекати поки повністю всі фукції будуть готові як завжди буває з соц.мережами що постійно щось да додаєтся напраклад на початку цього проекту може бути що люди просто постять світлини своїх котиків а потім щоб можно було постити як сторіс, відеотрансляциї і тд наприклад як інстаграм бо спочатку там можно було постити тільки світлини а тепер там можно і відео і музику і світлини під музику і прями трансляції і сторіс і ще багато багато чого іншого